// 4.16.0 0x31d013fc
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_arrow_down_bold[]; // BITMAP_ARROW_DOWN_BOLD_ID = 0, Size: 48x48 pixels
extern const unsigned char image_arrow_up_bold[]; // BITMAP_ARROW_UP_BOLD_ID = 1, Size: 48x48 pixels
extern const unsigned char image_backspace_outline[]; // BITMAP_BACKSPACE_OUTLINE_ID = 2, Size: 48x48 pixels
extern const unsigned char image_cog_outline_black[]; // BITMAP_COG_OUTLINE_BLACK_ID = 3, Size: 48x48 pixels
extern const unsigned char image_cog_outline_small_black[]; // BITMAP_COG_OUTLINE_SMALL_BLACK_ID = 4, Size: 24x24 pixels
extern const unsigned char image_cog_outline_small_white[]; // BITMAP_COG_OUTLINE_SMALL_WHITE_ID = 5, Size: 24x24 pixels
extern const unsigned char image_cog_outline_white[]; // BITMAP_COG_OUTLINE_WHITE_ID = 6, Size: 48x48 pixels
extern const unsigned char image_home_variant_outline_black[]; // BITMAP_HOME_VARIANT_OUTLINE_BLACK_ID = 7, Size: 48x48 pixels
extern const unsigned char image_home_variant_outline_white[]; // BITMAP_HOME_VARIANT_OUTLINE_WHITE_ID = 8, Size: 48x48 pixels
extern const unsigned char image_plus_black[]; // BITMAP_PLUS_BLACK_ID = 9, Size: 48x48 pixels
extern const unsigned char image_plus_white[]; // BITMAP_PLUS_WHITE_ID = 10, Size: 48x48 pixels
extern const unsigned char image_power_black[]; // BITMAP_POWER_BLACK_ID = 11, Size: 48x48 pixels
extern const unsigned char image_power_small_black[]; // BITMAP_POWER_SMALL_BLACK_ID = 12, Size: 24x24 pixels
extern const unsigned char image_power_small_white[]; // BITMAP_POWER_SMALL_WHITE_ID = 13, Size: 24x24 pixels
extern const unsigned char image_power_white[]; // BITMAP_POWER_WHITE_ID = 14, Size: 48x48 pixels
extern const unsigned char image_square_white[]; // BITMAP_SQUARE_WHITE_ID = 15, Size: 50x50 pixels
extern const unsigned char image_transit_connection_horizontal_balck[]; // BITMAP_TRANSIT_CONNECTION_HORIZONTAL_BALCK_ID = 16, Size: 48x48 pixels
extern const unsigned char image_transit_connection_horizontal_white[]; // BITMAP_TRANSIT_CONNECTION_HORIZONTAL_WHITE_ID = 17, Size: 48x48 pixels
extern const unsigned char image_vertical_white[]; // BITMAP_VERTICAL_WHITE_ID = 18, Size: 50x50 pixels
extern const unsigned char image_view_quilt_outline_black[]; // BITMAP_VIEW_QUILT_OUTLINE_BLACK_ID = 19, Size: 48x48 pixels
extern const unsigned char image_view_quilt_outline_white[]; // BITMAP_VIEW_QUILT_OUTLINE_WHITE_ID = 20, Size: 48x48 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { image_arrow_down_bold, 0, 48, 48, 18, 8, 12, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 25, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_arrow_up_bold, 0, 48, 48, 18, 15, 12, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 25, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_backspace_outline, 0, 48, 48, 14, 6, 30, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cog_outline_black, 0, 48, 48, 20, 4, 8, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cog_outline_small_black, 0, 24, 24, 10, 2, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cog_outline_small_white, 0, 24, 24, 10, 2, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_cog_outline_white, 0, 48, 48, 20, 4, 8, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_home_variant_outline_black, 0, 48, 48, 18, 26, 12, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 16, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_home_variant_outline_white, 0, 48, 48, 18, 26, 12, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 16, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_plus_black, 0, 48, 48, 22, 10, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 28, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_plus_white, 0, 48, 48, 22, 10, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 28, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_power_black, 0, 48, 48, 22, 6, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_power_small_black, 0, 24, 24, 11, 3, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_power_small_white, 0, 24, 24, 11, 3, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_power_white, 0, 48, 48, 22, 6, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_square_white, 0, 50, 50, 44, 26, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 20, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_transit_connection_horizontal_balck, 0, 48, 48, 10, 22, 28, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_transit_connection_horizontal_white, 0, 48, 48, 10, 22, 28, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_vertical_white, 0, 50, 50, 44, 4, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 42, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_view_quilt_outline_black, 0, 48, 48, 8, 10, 34, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_view_quilt_outline_white, 0, 48, 48, 8, 10, 34, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
